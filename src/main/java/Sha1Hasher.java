/*
Based on solution from https://www.boardinfinity.com/blog/sha-algorithm/
*/

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

// Main class
public class Sha1Hasher {
    public static String encryptThisString(String input) {
        // handling exceptions
        try {
            // getInstance() method is called with algorithm SHA-1
            MessageDigest md = MessageDigest.getInstance("SHA-1");

            // digest() method is called to calculate message digest of the input string
            byte[] messageDigest = md.digest(input.getBytes());

            // Convert byte array into signum representation
            BigInteger no = new BigInteger(1, messageDigest);

            // Convert message digest into hexadecimal value
            String hashtext = no.toString(16);

            // Add preceding 0s to make it a 32 bit value
            while (hashtext.length() < 32) {
                hashtext = STR."0\{hashtext}";
            }
            // return the HashText created
            return hashtext;
        }
        // For specifying wrong message digest algorithms
        catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

    // Driver code
    public static void main(String[] args) {
        System.out.print("HashCode Generated by SHA-1 for: ");

        String str1 = "Board Infinity";
        System.out.print(STR."\n\{str1} : \{encryptThisString(str1)}");

        String str2 = "Website";
        System.out.println(STR."\n\{str2} : \{encryptThisString(str2)}");
    }
}